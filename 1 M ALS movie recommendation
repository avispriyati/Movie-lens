{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"1 M ALS movie recommendation","provenance":[{"file_id":"1w19vf4-cxQduC-_L5v5gF_UVldxrlF4u","timestamp":1643823126249}],"collapsed_sections":[],"authorship_tag":"ABX9TyMWKugtQyBzSR2Lpy7qYu5p"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["! apt update"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-yLrw29HALw0","executionInfo":{"status":"ok","timestamp":1644981983842,"user_tz":-420,"elapsed":5562,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"01d5701b-93a2-4aaf-e2ef-4ea2c3879099"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[33m\r0% [Working]\u001b[0m\r            \rGet:1 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease [3,626 B]\n","\u001b[33m\r0% [Connecting to archive.ubuntu.com (91.189.88.152)] [Connecting to security.u\u001b[0m\u001b[33m\r0% [Connecting to archive.ubuntu.com (91.189.88.152)] [Connecting to security.u\u001b[0m\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Connecting to archive.ubuntu.com (91.189.88.152)\u001b[0m\r                                                                               \rIgn:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [Waiting for headers] [Wait\u001b[0m\r                                                                               \rGet:3 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease [15.9 kB]\n","\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [Waiting for headers] [3 In\u001b[0m\r                                                                               \rGet:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [4 InRelease 14.2 kB/88.7 k\u001b[0m\r                                                                               \rHit:5 http://archive.ubuntu.com/ubuntu bionic InRelease\n","\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [4 InRelease 14.2 kB/88.7 k\u001b[0m\r                                                                               \rIgn:6 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [4 InRelease 14.2 kB/88.7 k\u001b[0m\r                                                                               \rGet:7 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release [696 B]\n","\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [4 InRelease 14.2 kB/88.7 k\u001b[0m\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [4 InRelease 14.2 kB/88.7 k\u001b[0m\r                                                                               \rHit:8 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","\u001b[33m\r0% [1 InRelease gpgv 3,626 B] [Waiting for headers] [4 InRelease 43.1 kB/88.7 k\u001b[0m\r                                                                               \rGet:9 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Get:10 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release.gpg [836 B]\n","Hit:11 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Get:12 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Get:13 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease [15.9 kB]\n","Get:14 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease [21.3 kB]\n","Get:16 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main Sources [1,826 kB]\n","Get:17 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages [917 kB]\n","Get:18 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2,565 kB]\n","Get:19 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main amd64 Packages [936 kB]\n","Get:20 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1,470 kB]\n","Get:21 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [3,004 kB]\n","Get:22 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [21.1 kB]\n","Get:23 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [783 kB]\n","Get:24 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2,248 kB]\n","Get:25 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [29.0 kB]\n","Get:26 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [816 kB]\n","Get:27 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic/main amd64 Packages [45.3 kB]\n","Get:28 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic/main amd64 Packages [42.8 kB]\n","Fetched 15.0 MB in 3s (4,459 kB/s)\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","66 packages can be upgraded. Run 'apt list --upgradable' to see them.\n"]}]},{"cell_type":"code","metadata":{"id":"Z3Riz5g990hW"},"source":["#Java JDK\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","#Downloading Spark\n","!wget -q https://archive.apache.org/dist/spark/spark-3.0.0/spark-3.0.0-bin-hadoop3.2.tgz\n","#Unzipping the hadoop file\n","!tar xf spark-3.0.0-bin-hadoop3.2.tgz"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xk5wePix94Ef","executionInfo":{"status":"ok","timestamp":1643825453685,"user_tz":-420,"elapsed":883,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"f0fad7c6-bb6c-4e82-cf2d-92e16e9797a9"},"source":["#Unzip the file\n","!unzip movie1M.zip"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  ratings_1m.csv.zip\n","  inflating: ratings_1m.csv          \n"]}]},{"cell_type":"code","metadata":{"id":"xie483cW980m"},"source":["###################### SPARK SETUP ################################\n","#Install findspark\n","!pip install -q findspark"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uetiZ7hS9_C7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643823617219,"user_tz":-420,"elapsed":3218,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"a61eff71-5c87-4f9d-ab8a-f7bb1d513a03"},"source":["!pip install py4j"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting py4j\n","  Downloading py4j-0.10.9.3-py2.py3-none-any.whl (198 kB)\n","\u001b[?25l\r\u001b[K     |█▋                              | 10 kB 14.5 MB/s eta 0:00:01\r\u001b[K     |███▎                            | 20 kB 13.9 MB/s eta 0:00:01\r\u001b[K     |█████                           | 30 kB 10.2 MB/s eta 0:00:01\r\u001b[K     |██████▋                         | 40 kB 8.6 MB/s eta 0:00:01\r\u001b[K     |████████▎                       | 51 kB 5.6 MB/s eta 0:00:01\r\u001b[K     |█████████▉                      | 61 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 71 kB 5.4 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 81 kB 6.0 MB/s eta 0:00:01\r\u001b[K     |██████████████▉                 | 92 kB 6.1 MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 102 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 112 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▊            | 122 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 133 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 143 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▊       | 153 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 163 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 174 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▋  | 184 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 194 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 198 kB 5.2 MB/s \n","\u001b[?25hInstalling collected packages: py4j\n","Successfully installed py4j-0.10.9.3\n"]}]},{"cell_type":"code","metadata":{"id":"W97LNBHW-4zO"},"source":["#Setting up environment variables\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.0.0-bin-hadoop3.2\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uLjmc1d--BE5"},"source":["#Initialize Spark session using findspark lib\n","import findspark\n","findspark.init()\n","from pyspark.sql import SparkSession\n","spark = SparkSession.builder.master(\"local[*]\").getOrCreate()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zrnte6yI-G30"},"source":["**read the data file**"]},{"cell_type":"code","metadata":{"id":"K8Rgb92l-Ehq"},"source":["#setting the path of the files\n","file_ratings ='/content/ratings_1m.csv'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-P7b4eCq-b-b"},"source":["def readFiles(filename):\n","  data = spark.read.format('com.databricks.spark.csv').\\\n","                               options(header='true', \\\n","                               inferschema='true').\\\n","                load(filename,header=True)\n","  return data"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S93ooZKL_At3"},"source":["#Read the data files\n","ratings = readFiles(file_ratings)"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ratings.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UXiqnWz4iL1y","executionInfo":{"status":"ok","timestamp":1644982436069,"user_tz":-420,"elapsed":7,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"93b7394c-1217-425c-9408-0223b40984ac"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Row(Userid=1, Movieid=1193, Ratings=5, Timestamp=978300760)"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"UvKwyD_bk_Xc"},"source":["EDA"]},{"cell_type":"code","metadata":{"id":"QUsAQxFEbEVZ"},"source":["import numpy as np\n","import pandas as pd\n","\n","\n","from pyspark import SparkContext, SQLContext\n","from pyspark.ml.recommendation import ALS\n","from pyspark.sql.functions import *\n","from pyspark.sql import functions as F\n","\n","from pyspark.sql.functions import lit\n","from pyspark.ml.feature import IndexToString\n","from pyspark.ml.feature import StringIndexer\n","from pyspark.sql.functions import col\n","from pyspark.ml.tuning import ParamGridBuilder, TrainValidationSplit,CrossValidator\n","from pyspark.ml.evaluation import RegressionEvaluator\n","\n","from pyspark.ml import Pipeline, PipelineModel"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Importing MovieLens Ratings Dataset\n","ratings_all = pd.read_csv('/content/movie1M/ratings_1m.csv')\n","\n","user_ratings_count = ratings_all.groupby(['Userid']).count()['Movieid']\n","movie_ratings_count = ratings_all.groupby(['Movieid']).count()['Userid']"],"metadata":{"id":"aApE8N2krQem"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('Ratings Provided by Users:')\n","print('Average of Ratings Count =', np.round(np.mean(user_ratings_count), 4))\n","print('Median of Ratings Count =', np.round(np.median(user_ratings_count), 4))\n","\n","print('\\nRatings Received by Movies:')\n","print('Average of Ratings Count =', np.round(np.mean(movie_ratings_count), 4))\n","print('Median of Ratings Count =', np.round(np.median(movie_ratings_count), 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j1qdl2tUrazU","executionInfo":{"status":"ok","timestamp":1643825694295,"user_tz":-420,"elapsed":309,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"e934f315-5404-4428-90ca-cd68ef47d5a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Ratings Provided by Users:\n","Average of Ratings Count = 165.5975\n","Median of Ratings Count = 96.0\n","\n","Ratings Received by Movies:\n","Average of Ratings Count = 269.8891\n","Median of Ratings Count = 123.5\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"Oa_nuIxht1WY","executionInfo":{"status":"ok","timestamp":1643825697016,"user_tz":-420,"elapsed":6,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"83b70f24-d6d5-453b-9ddf-bf5aa360e081"},"source":["ratings_all.head(10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-df5b67d7-5e7e-47cb-a898-d5266105aeaa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Userid</th>\n","      <th>Movieid</th>\n","      <th>Ratings</th>\n","      <th>Timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1193</td>\n","      <td>5</td>\n","      <td>978300760</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>661</td>\n","      <td>3</td>\n","      <td>978302109</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>914</td>\n","      <td>3</td>\n","      <td>978301968</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>3408</td>\n","      <td>4</td>\n","      <td>978300275</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>2355</td>\n","      <td>5</td>\n","      <td>978824291</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1</td>\n","      <td>1197</td>\n","      <td>3</td>\n","      <td>978302268</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1</td>\n","      <td>1287</td>\n","      <td>5</td>\n","      <td>978302039</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1</td>\n","      <td>2804</td>\n","      <td>5</td>\n","      <td>978300719</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>594</td>\n","      <td>4</td>\n","      <td>978302268</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1</td>\n","      <td>919</td>\n","      <td>4</td>\n","      <td>978301368</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df5b67d7-5e7e-47cb-a898-d5266105aeaa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-df5b67d7-5e7e-47cb-a898-d5266105aeaa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-df5b67d7-5e7e-47cb-a898-d5266105aeaa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   Userid  Movieid  Ratings  Timestamp\n","0       1     1193        5  978300760\n","1       1      661        3  978302109\n","2       1      914        3  978301968\n","3       1     3408        4  978300275\n","4       1     2355        5  978824291\n","5       1     1197        3  978302268\n","6       1     1287        5  978302039\n","7       1     2804        5  978300719\n","8       1      594        4  978302268\n","9       1      919        4  978301368"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lil6yv8flGKN","executionInfo":{"status":"ok","timestamp":1643825698288,"user_tz":-420,"elapsed":3,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"a1119465-588f-4785-d69d-f99854a36be1"},"source":["#checking how many movies have blank sections of data.\n","ratings_all.isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Userid       0\n","Movieid      0\n","Ratings      0\n","Timestamp    0\n","dtype: int64"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"na1tEQeIlLKn","executionInfo":{"elapsed":3,"status":"ok","timestamp":1643825699648,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":-420},"outputId":"020d1ab2-2429-4878-c61e-b303231fddf6"},"source":["#determining what the data types are for the data that was just imported.\n","#int64 are whole numbers, float64 are decimels, and object are strings. \n","ratings_all.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Userid       int64\n","Movieid      int64\n","Ratings      int64\n","Timestamp    int64\n","dtype: object"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"8_6v6bKFlQGx","executionInfo":{"elapsed":7,"status":"ok","timestamp":1643825701193,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":-420},"outputId":"029fd3a5-9306-4716-8961-4e501158b45e"},"source":["#Getting descriptive statistics for numeric columns (floats and intergers) in the data set.\n","ratings_all.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-74c4f1af-2790-43a2-b749-21cbbecd6812\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Userid</th>\n","      <th>Movieid</th>\n","      <th>Ratings</th>\n","      <th>Timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.000209e+06</td>\n","      <td>1.000209e+06</td>\n","      <td>1.000209e+06</td>\n","      <td>1.000209e+06</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.024512e+03</td>\n","      <td>1.865540e+03</td>\n","      <td>3.581564e+00</td>\n","      <td>9.722437e+08</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.728413e+03</td>\n","      <td>1.096041e+03</td>\n","      <td>1.117102e+00</td>\n","      <td>1.215256e+07</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000e+00</td>\n","      <td>1.000000e+00</td>\n","      <td>1.000000e+00</td>\n","      <td>9.567039e+08</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.506000e+03</td>\n","      <td>1.030000e+03</td>\n","      <td>3.000000e+00</td>\n","      <td>9.653026e+08</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.070000e+03</td>\n","      <td>1.835000e+03</td>\n","      <td>4.000000e+00</td>\n","      <td>9.730180e+08</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>4.476000e+03</td>\n","      <td>2.770000e+03</td>\n","      <td>4.000000e+00</td>\n","      <td>9.752209e+08</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>6.040000e+03</td>\n","      <td>3.952000e+03</td>\n","      <td>5.000000e+00</td>\n","      <td>1.046455e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74c4f1af-2790-43a2-b749-21cbbecd6812')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-74c4f1af-2790-43a2-b749-21cbbecd6812 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-74c4f1af-2790-43a2-b749-21cbbecd6812');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["             Userid       Movieid       Ratings     Timestamp\n","count  1.000209e+06  1.000209e+06  1.000209e+06  1.000209e+06\n","mean   3.024512e+03  1.865540e+03  3.581564e+00  9.722437e+08\n","std    1.728413e+03  1.096041e+03  1.117102e+00  1.215256e+07\n","min    1.000000e+00  1.000000e+00  1.000000e+00  9.567039e+08\n","25%    1.506000e+03  1.030000e+03  3.000000e+00  9.653026e+08\n","50%    3.070000e+03  1.835000e+03  4.000000e+00  9.730180e+08\n","75%    4.476000e+03  2.770000e+03  4.000000e+00  9.752209e+08\n","max    6.040000e+03  3.952000e+03  5.000000e+00  1.046455e+09"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qeVWbJHdlZiY","executionInfo":{"elapsed":531,"status":"ok","timestamp":1643825704760,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":-420},"outputId":"f6eb81af-8f63-4f8c-b553-e9ae805eb7e1"},"source":["ratings_all.info()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1000209 entries, 0 to 1000208\n","Data columns (total 4 columns):\n"," #   Column     Non-Null Count    Dtype\n","---  ------     --------------    -----\n"," 0   Userid     1000209 non-null  int64\n"," 1   Movieid    1000209 non-null  int64\n"," 2   Ratings    1000209 non-null  int64\n"," 3   Timestamp  1000209 non-null  int64\n","dtypes: int64(4)\n","memory usage: 30.5 MB\n"]}]},{"cell_type":"markdown","metadata":{"id":"8qiL6kHKEQcI"},"source":["cek"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G2QED-Gw_gtK","executionInfo":{"elapsed":537,"status":"ok","timestamp":1643825706504,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":-420},"outputId":"b98113da-8174-4ca0-d8e7-94c51e11631b"},"source":["Ratings.show(5)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+------+-------+-------+---------+\n","|Userid|Movieid|Ratings|Timestamp|\n","+------+-------+-------+---------+\n","|     1|   1193|      5|978300760|\n","|     1|    661|      3|978302109|\n","|     1|    914|      3|978301968|\n","|     1|   3408|      4|978300275|\n","|     1|   2355|      5|978824291|\n","+------+-------+-------+---------+\n","only showing top 5 rows\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"plgy92cB_toY","executionInfo":{"status":"ok","timestamp":1643825714392,"user_tz":-420,"elapsed":330,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"b34715a5-7183-48cf-a17a-e11636e962cb"},"source":["#We will consider ratings file as the file of interest as it has the rating values\n","#checking the schema\n","Ratings.printSchema()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- Userid: integer (nullable = true)\n"," |-- Movieid: integer (nullable = true)\n"," |-- Ratings: integer (nullable = true)\n"," |-- Timestamp: integer (nullable = true)\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FGncQtZA_38H","executionInfo":{"status":"ok","timestamp":1643825718378,"user_tz":-420,"elapsed":1272,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"d28a44f2-c131-4e8c-ffb6-661dec583639"},"source":["#Data dimensions\n","print('No. of rows: %d' % Ratings.count())\n","Ratings.show()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["No. of rows: 1000209\n","+------+-------+-------+---------+\n","|Userid|Movieid|Ratings|Timestamp|\n","+------+-------+-------+---------+\n","|     1|   1193|      5|978300760|\n","|     1|    661|      3|978302109|\n","|     1|    914|      3|978301968|\n","|     1|   3408|      4|978300275|\n","|     1|   2355|      5|978824291|\n","|     1|   1197|      3|978302268|\n","|     1|   1287|      5|978302039|\n","|     1|   2804|      5|978300719|\n","|     1|    594|      4|978302268|\n","|     1|    919|      4|978301368|\n","|     1|    595|      5|978824268|\n","|     1|    938|      4|978301752|\n","|     1|   2398|      4|978302281|\n","|     1|   2918|      4|978302124|\n","|     1|   1035|      5|978301753|\n","|     1|   2791|      4|978302188|\n","|     1|   2687|      3|978824268|\n","|     1|   2018|      4|978301777|\n","|     1|   3105|      5|978301713|\n","|     1|   2797|      4|978302039|\n","+------+-------+-------+---------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P4tJdjtsAE4N","executionInfo":{"status":"ok","timestamp":1644984689632,"user_tz":-420,"elapsed":7,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"ff53cfed-e748-4887-9929-acf7c3facf89"},"source":["#Removing timestamp column, so dropping it\n","data = ratings\n","\n","#print the schema now and check that timestamp column is dropped\n","data.printSchema()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- Userid: integer (nullable = true)\n"," |-- Movieid: integer (nullable = true)\n"," |-- Ratings: integer (nullable = true)\n"," |-- Timestamp: integer (nullable = true)\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"v3MVEPh3ErvH"},"source":["***Data Sparsity***"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wmZ5NdIGEjA4","executionInfo":{"status":"ok","timestamp":1644984689631,"user_tz":-420,"elapsed":8923,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"59c2a81a-7f2c-42dc-edd4-654f3b4425e3"},"source":["def get_mat_sparsity(ratings):\n","    # Count the total number of ratings in the dataset\n","    count_nonzero = ratings.select(\"ratings\").count()\n","\n","    # Count the number of distinct userIds and distinct movieIds\n","    total_elements = ratings.select(\"userId\").distinct().count() * ratings.select(\"movieId\").distinct().count()\n","\n","    # Divide the numerator by the denominator\n","    sparsity = (1.0 - (count_nonzero *1.0)/total_elements)*100\n","    print(\"The ratings dataframe is \", \"%.2f\" % sparsity + \"% sparse.\")\n","    \n","get_mat_sparsity(ratings)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The ratings dataframe is  95.53% sparse.\n"]}]},{"cell_type":"markdown","metadata":{"id":"Hi_9vvB_Zh0m"},"source":["Membagi dataset yang sudah dilakukan cleaning ke dalam 2 bagian, Data Training\n","(80%) dan Data Testing (20%)."]},{"cell_type":"code","metadata":{"id":"zRO8nPsiAHW7","executionInfo":{"status":"ok","timestamp":1644984698295,"user_tz":-420,"elapsed":5107,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"b622dd39-f65c-4b73-d112-5731e960bcac"},"source":["# Randomly split the data into train and test where 80% data is in train and remaining is test\n","train, test = data.randomSplit([0.8, 0.2])\n","print(\"  Train dataset:\", train.count(), \"rows\")\n","print(\"  Test dataset: \", test.count(), \"rows\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["  Train dataset: 799989 rows\n","  Test dataset:  200220 rows\n"]}]},{"cell_type":"code","metadata":{"id":"N7lkvoirAObF"},"source":["# Build a recommendation model using Alternating Least Squares method\n","# Evaluate the model by computing the RMSE on the test data\n","model = ALS(userCol=\"Userid\", itemCol=\"Movieid\", ratingCol=\"Ratings\", rank=20, maxIter=10, nonnegative=True, coldStartStrategy=\"drop\").fit(train)\n","\n","from pyspark.ml.evaluation import RegressionEvaluator\n","evaluator=RegressionEvaluator(metricName=\"rmse\",labelCol=\"Ratings\",predictionCol=\"prediction\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YIDFyNJbAQb2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644984878795,"user_tz":-420,"elapsed":35099,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"a08a2ee0-bbd5-471b-b6d1-29c8d32948db"},"source":["# Make predictions and print the RMSE of the ALS model\n","predictions=model.transform(test)\n","rmse=evaluator.evaluate(predictions)\n","print(\"New RMSE: \", evaluator.evaluate(model.transform(test)))\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["New RMSE:  0.8690962203248466\n"]}]},{"cell_type":"markdown","source":[""],"metadata":{"id":"WDyivqY_onm0"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wOSOPCGRcqqG","executionInfo":{"status":"ok","timestamp":1643825924535,"user_tz":-420,"elapsed":2631,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"898854a3-a336-4804-d0b6-05b998782fac"},"source":["test.count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["200438"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","metadata":{"id":"dyVPtl3rOMvz"},"source":["***Implementing ALS with Cross Validation***"]},{"cell_type":"code","metadata":{"id":"W6otrnE_OOvi"},"source":["# Import the required functions\n","from pyspark.ml.evaluation import RegressionEvaluator\n","from pyspark.ml.recommendation import ALS\n","from pyspark.ml.tuning import ParamGridBuilder, CrossValidator"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FkLR-uqnOSTZ"},"source":["# Now we try to improve the performance of the original model using cross validation and solve the cold-start problem.\n","# we set cold start strategy to 'drop' to ensure we don't get NaN evaluation metrics\n","\n","model = ALS(userCol=\"Userid\", itemCol=\"Movieid\", ratingCol=\"Ratings\", nonnegative = True, coldStartStrategy=\"drop\")\n","\n","#For Parameter tuning of the ALS model we use ParamGridBuilder function\n","#We tune two parameters \n","#1. The Regularization parameter ranging from 0.1, 0.01, 0.001, 0.0001\n","#2. The rank for matrix factorization\n","paramGrid = ParamGridBuilder() \\\n","    .addGrid(model.regParam, [0.1, 0.05, 0.01, 0.001]) \\\n","    .addGrid(model.rank, [5, 10, 20, 30]) \\\n","    .build()\n","\n","#Defining a cross-validator object\n","#Setting up CV and adding parameters. We will be performing a 5 fold CV\n","crossvalidation = CrossValidator(estimator = model,\n","                     estimatorParamMaps = paramGrid,\n","                     evaluator = evaluator,\n","                     numFolds=5)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dwf_045E-Ev1"},"source":["\n","# Build cross validation using CrossValidator\n","cv = CrossValidator(estimator=model, estimatorParamMaps=paramGrid, evaluator=evaluator, numFolds=5)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rodUDRw7FZp9"},"source":["#Fit cross validator to the 'train' dataset\n","model = crossvalidation.fit(train)\n","\n","#Extract best model from the cv model above\n","best_model = model.bestModel"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IfehHt6dO82C"},"source":["***Printing the Best Model's parameter values***"]},{"cell_type":"code","metadata":{"id":"REBX5-M0PBRj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643828486119,"user_tz":-420,"elapsed":12681,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"4fdb6bc7-5da6-46f0-d2b4-f6110f7cfa6a"},"source":["#The Best_model\n","print(type(best_model))\n","#Complete the code below to extract the ALS model parameters\n","print(\"**Best Model**\")\n","#Rank\n","print(\"Rank: \", best_model._java_obj.parent().getRank())\n","#MaxIter\n","print(\"MaxIter: \", best_model._java_obj.parent().getMaxIter())\n","#RegParam\n","print(\"RegParam: \", best_model._java_obj.parent().getRegParam())\n","# Calculate the RMSE on test data using the best set of parameters obtained after cross validation\n","print(\"Best RMSE value is: \", evaluator.evaluate(best_model.transform(test)))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pyspark.ml.recommendation.ALSModel'>\n","**Best Model**\n","Rank:  30\n","MaxIter:  10\n","RegParam:  0.05\n","Best RMSE value is:  0.8600610063802344\n"]}]},{"cell_type":"code","metadata":{"id":"Qn2PBCngPIRI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643828498113,"user_tz":-420,"elapsed":11995,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"85330d19-6518-431e-e9fb-047fc4f49b3f"},"source":["# Calculate the RMSE on test data using the best set of parameters obtained after cross validation\n","print(\"Best RMSE value is: \", evaluator.evaluate(best_model.transform(test)))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best RMSE value is:  0.8600610063802344\n"]}]}]}