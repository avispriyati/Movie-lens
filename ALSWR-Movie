{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6468,"status":"ok","timestamp":1644145814306,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":0},"id":"-yLrw29HALw0","outputId":"d8b51f3e-a83a-4cf6-a094-5ca97ffeb304"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[33m\r0% [Working]\u001b[0m\r            \rGet:1 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease [3,626 B]\n","Ign:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","Ign:3 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Get:4 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release [696 B]\n","Hit:5 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Get:6 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release.gpg [836 B]\n","Get:7 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","Hit:8 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease\n","Hit:9 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Get:10 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Hit:11 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Hit:13 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease\n","Get:14 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages [917 kB]\n","Get:15 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Get:16 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease [21.3 kB]\n","Get:17 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [760 kB]\n","Get:18 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2,986 kB]\n","Get:19 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2,544 kB]\n","Get:20 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1,466 kB]\n","Get:21 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic/main amd64 Packages [42.8 kB]\n","Get:22 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2,244 kB]\n","Fetched 11.2 MB in 4s (2,942 kB/s)\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","55 packages can be upgraded. Run 'apt list --upgradable' to see them.\n"]}],"source":["! apt update"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"Z3Riz5g990hW","executionInfo":{"status":"ok","timestamp":1644145845467,"user_tz":0,"elapsed":31169,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"outputs":[],"source":["#Java JDK\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","#Downloading Spark\n","!wget -q https://archive.apache.org/dist/spark/spark-3.0.0/spark-3.0.0-bin-hadoop3.2.tgz\n","#Unzipping the hadoop file\n","!tar xf spark-3.0.0-bin-hadoop3.2.tgz"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":307,"status":"ok","timestamp":1644145924933,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":0},"id":"xk5wePix94Ef","outputId":"b96f977a-52f2-4661-f67a-8bc75d962a6e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  movie1M.zip\n","   creating: movie1M/\n","  inflating: movie1M/movies_1m.csv   \n","  inflating: movie1M/ratings_1m.csv  \n"]}],"source":["#Unzip the file\n","!unzip movie1M.zip"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"xie483cW980m","executionInfo":{"status":"ok","timestamp":1644145849705,"user_tz":0,"elapsed":4262,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"outputs":[],"source":["###################### SPARK SETUP ################################\n","#Install findspark\n","!pip install -q findspark"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4936,"status":"ok","timestamp":1644145854627,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":0},"id":"uetiZ7hS9_C7","outputId":"325f7ea2-8842-42ce-e7ee-85438860e42d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting py4j\n","  Downloading py4j-0.10.9.3-py2.py3-none-any.whl (198 kB)\n","\u001b[?25l\r\u001b[K     |█▋                              | 10 kB 19.7 MB/s eta 0:00:01\r\u001b[K     |███▎                            | 20 kB 23.9 MB/s eta 0:00:01\r\u001b[K     |█████                           | 30 kB 16.3 MB/s eta 0:00:01\r\u001b[K     |██████▋                         | 40 kB 11.7 MB/s eta 0:00:01\r\u001b[K     |████████▎                       | 51 kB 8.9 MB/s eta 0:00:01\r\u001b[K     |█████████▉                      | 61 kB 7.3 MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 71 kB 8.1 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 81 kB 9.1 MB/s eta 0:00:01\r\u001b[K     |██████████████▉                 | 92 kB 7.8 MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 102 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 112 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |███████████████████▊            | 122 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 133 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 143 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▊       | 153 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 163 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 174 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▋  | 184 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 194 kB 8.4 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 198 kB 8.4 MB/s \n","\u001b[?25hInstalling collected packages: py4j\n","Successfully installed py4j-0.10.9.3\n"]}],"source":["!pip install py4j"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"W97LNBHW-4zO","executionInfo":{"status":"ok","timestamp":1644145854627,"user_tz":0,"elapsed":11,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"outputs":[],"source":["#Setting up environment variables\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.0.0-bin-hadoop3.2\""]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":196},"executionInfo":{"elapsed":5662,"status":"ok","timestamp":1644145860280,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":0},"id":"uLjmc1d--BE5","outputId":"5a653a74-eb3b-4649-bb3b-478cc4b41101"},"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","        <div>\n","            <p><b>SparkContext</b></p>\n","\n","            <p><a href=\"http://9d8fa9ec878d:4040\">Spark UI</a></p>\n","\n","            <dl>\n","              <dt>Version</dt>\n","                <dd><code>v3.0.0</code></dd>\n","              <dt>Master</dt>\n","                <dd><code>local[*]</code></dd>\n","              <dt>AppName</dt>\n","                <dd><code>pyspark-shell</code></dd>\n","            </dl>\n","        </div>\n","        "],"text/plain":["<SparkContext master=local[*] appName=pyspark-shell>"]},"metadata":{},"execution_count":6}],"source":["#Initialize Spark session using findspark lib\n","import findspark\n","findspark.init()\n","from pyspark.sql import SparkSession\n","spark = SparkSession.builder.master(\"local[*]\").getOrCreate()\n","sc = spark.sparkContext\n","sc"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"weXJ8qyfpVXF","executionInfo":{"status":"ok","timestamp":1644145861236,"user_tz":0,"elapsed":964,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"outputs":[],"source":["import os\n","import time\n","\n","from pyspark.sql import SparkSession\n","import pyspark \n","\n","from pyspark.sql.functions import lit\n","from pyspark.ml.feature import IndexToString\n","from pyspark.ml.feature import StringIndexer\n","from pyspark.sql.functions import col\n","from pyspark.ml.tuning import ParamGridBuilder, TrainValidationSplit,CrossValidator\n","from pyspark.ml.evaluation import RegressionEvaluator\n","from pyspark.ml.recommendation import ALS\n","from pyspark.ml import Pipeline, PipelineModel\n","\n","import math\n","import numpy as np\n","import pandas as pd\n","\n","\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","%matplotlib inline"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"7snafWyypcnh","executionInfo":{"status":"ok","timestamp":1644145861236,"user_tz":0,"elapsed":16,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"outputs":[],"source":["from pyspark.sql import functions as f"]},{"cell_type":"markdown","metadata":{"id":"zrnte6yI-G30"},"source":["**read the data file**"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"FQHcLDCZ12Le","executionInfo":{"status":"ok","timestamp":1644146128316,"user_tz":0,"elapsed":474,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"outputs":[],"source":["#setting the path of the files\n","file_ratings ='/content/movie1M/ratings_1m.csv'"]},{"cell_type":"code","source":["def readFiles(filename):\n","  data = spark.read.format('com.databricks.spark.csv').\\\n","                               options(header='true', \\\n","                               inferschema='true').\\\n","                load(filename,header=True)\n","  return data"],"metadata":{"id":"KOqywvlSvYIG","executionInfo":{"status":"ok","timestamp":1644146036679,"user_tz":0,"elapsed":5,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["#Read the data files\n","Ratings = readFiles(file_ratings)"],"metadata":{"id":"UygV2CyAva3d","executionInfo":{"status":"ok","timestamp":1644146140120,"user_tz":0,"elapsed":10477,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["import time\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","from pyspark import SparkContext, SQLContext\n","\n","from pyspark.sql.functions import *\n","from pyspark.sql import functions as F\n","\n","from pyspark.ml.recommendation import ALS\n","from pyspark.ml.evaluation import RegressionEvaluator\n","from pyspark.ml.tuning import CrossValidator, ParamGridBuilder"],"metadata":{"id":"1UAo5fGMvin3","executionInfo":{"status":"ok","timestamp":1644146140120,"user_tz":0,"elapsed":6,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["#Removing timestamp column, so dropping it\n","data = Ratings.drop(\"timestamp\")\n","\n","#print the schema now and check that timestamp column is dropped\n","data.printSchema()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u4NJg_Riv3iJ","executionInfo":{"status":"ok","timestamp":1644146203125,"user_tz":0,"elapsed":290,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"179756af-92f4-444c-e35d-a3d0ab9dc739"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- Userid: integer (nullable = true)\n"," |-- Movieid: integer (nullable = true)\n"," |-- Ratings: integer (nullable = true)\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"Hi_9vvB_Zh0m"},"source":["Membagi dataset yang sudah dilakukan cleaning ke dalam 2 bagian, Data Training\n","(80%) ,Data Testing (20%), validation (20%)"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8071,"status":"ok","timestamp":1644146254671,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"},"user_tz":0},"id":"zRO8nPsiAHW7","outputId":"4b3d3f3f-4bac-4548-9faf-61301f25e733"},"outputs":[{"output_type":"stream","name":"stdout","text":["  Train dataset: 599552 rows\n","  Test dataset:  200748 rows\n","  Test dataset:  199909 rows\n"]}],"source":["# Randomly split the data into train and test and val where 80% data is in train and remaining is test\n","train, test , validation = data.randomSplit([0.6, 0.2, 0.2])\n","print(\"  Train dataset:\", train.count(), \"rows\")\n","print(\"  Test dataset: \", test.count(), \"rows\")\n","print(\"  Test dataset: \", validation.count(), \"rows\")"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"_H4bsMJpAMRb","executionInfo":{"status":"ok","timestamp":1644146294929,"user_tz":0,"elapsed":280,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"outputs":[],"source":["from pyspark.ml.evaluation import RegressionEvaluator\n","from pyspark.ml.recommendation import ALS\n","from pyspark.ml.tuning import CrossValidator, ParamGridBuilder\n","from pyspark.ml import Pipeline\n","from pyspark.sql import Row\n","import numpy as np\n","import math"]},{"cell_type":"code","source":[""],"metadata":{"id":"DD2X3xTd34Ud","executionInfo":{"status":"ok","timestamp":1644146296881,"user_tz":0,"elapsed":279,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["seed = 5\n","iterations = 10\n","regularization_parameter =0.1\n","ranks = range(4, 12)\n","errors = []\n","err = 0\n","tolerance = 0.02\n","min_error = float('inf')\n","best_rank = -1\n","best_iteration = -1\n","\n","for rank in ranks:\n","    als = ALS(maxIter=iterations, regParam=regularization_parameter, rank=rank, userCol=\"Userid\", itemCol=\"Movieid\", ratingCol=\"Ratings\")\n","    model = als.fit(train)\n","    predictions = model.transform(validation)\n","    new_predictions = predictions.filter(col('prediction') != np.nan)\n","    evaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=\"Ratings\", predictionCol=\"prediction\")\n","    rmse = evaluator.evaluate(new_predictions)\n","    errors.append(rmse)\n","\n","    print ('For rank %s the RMSE is %s' % (rank, rmse))\n","    if rmse < min_error:\n","        min_error = rmse\n","        best_rank = rank\n","print ('The best model was trained with rank %s' % best_rank)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f-7kYAAI4RDj","executionInfo":{"status":"ok","timestamp":1644146589335,"user_tz":0,"elapsed":208837,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"ff1e23d3-8094-45fd-cf8d-16c3b8442cfa"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["For rank 4 the RMSE is 0.8864769110142124\n","For rank 5 the RMSE is 0.8816772689511121\n","For rank 6 the RMSE is 0.8759659299611233\n","For rank 7 the RMSE is 0.8742585846732628\n","For rank 8 the RMSE is 0.8700649655391329\n","For rank 9 the RMSE is 0.8747659168287012\n","For rank 10 the RMSE is 0.8739177567969504\n","For rank 11 the RMSE is 0.8727461520399764\n","The best model was trained with rank 8\n"]}]},{"cell_type":"code","source":["als = ALS(maxIter=iterations, regParam=regularization_parameter, rank=rank, userCol=\"Userid\", itemCol=\"Movieid\", ratingCol=\"Ratings\")\n","paramGrid = ParamGridBuilder() \\\n","    .addGrid(als.regParam, [0.1, 0.01]) \\\n","    .addGrid(als.rank, range(4, 12)) \\\n","    .build()\n","evaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=\"Ratings\", predictionCol=\"prediction\")\n","crossval = CrossValidator(estimator=als,\n","                          estimatorParamMaps=paramGrid,\n","                          evaluator=evaluator,\n","                          numFolds=5)\n","cvModel = crossval.fit(train)"],"metadata":{"id":"bUvMazBX78OU","executionInfo":{"status":"ok","timestamp":1644147890901,"user_tz":0,"elapsed":1301586,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["cvModel_pred = cvModel.transform(validation)\n","cvModel_pred = cvModel_pred.filter(col('prediction') != np.nan)\n","rmse = evaluator.evaluate(cvModel_pred)\n","print (\"the rmse for optimal grid parameters with cross validation is: {}\".format(rmse))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fVV_cm-89qfk","executionInfo":{"status":"ok","timestamp":1644147902595,"user_tz":0,"elapsed":11701,"user":{"displayName":"1982 Avis Priyati","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04182794466118726271"}},"outputId":"f2573a80-d3df-4ace-8dbc-3545dcca4518"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["the rmse for optimal grid parameters with cross validation is: 0.8864769110142124\n"]}]}],"metadata":{"colab":{"collapsed_sections":[],"name":"ALSWR-Movie","provenance":[{"file_id":"1d7B3_8AtfjLnp7KOaUgEaEKlZ0gNu0B9","timestamp":1644145750211},{"file_id":"1Yxh-GfmSgsCfizoiLddZjRRmiEoqKSdM","timestamp":1644130370325},{"file_id":"1dwyEq7SCRGYjvgA4BJpP-gugvjeAuzdM","timestamp":1643940751297},{"file_id":"1w19vf4-cxQduC-_L5v5gF_UVldxrlF4u","timestamp":1643029598655}],"authorship_tag":"ABX9TyPIUHszaw2hQOQWGJ01kbAu"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}